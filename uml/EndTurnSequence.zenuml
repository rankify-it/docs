GameMaster.hostGame(gameId) {
    //cron job
    while(gameNotFinished)
    {
        gameState = GameContract.gameState(gameId)

    if(gameState.canEndTurn)
    {

  encrVotes,encrProposals = EventLogs.getLogs(game,turn)
  proposals, votes, vSigs = KeyStore.decrypt(encrVotes,encrProposals)
  KeyStore.getTurnSalt(gameid,turn)
  {
      return tSalt = hash(PK,gameId,turn)
  }
  GameContract.endTurn(gameId,votes,newPropos,tSalt,vSigs)
  {
    newProposalsAreLegit = GameContract.validateNextProposals(gameId,newPropos,tSalt)
    {
    newProposalsChecksum = GameStorage.getFutureProposalsChecksum(gameId)
    newProposalsAreLegit = _(hash(tSalt,newProposals) == proposalsChecksum)

    }
    if(!newProposalsAreLegit)
      {
        return revert
      }


    proposals = GameStorage.getOldProposals(gameId)
    while (votes) {
    checksum = GameStorage.getVotingProof(player)
    playerSalt = hash(playerId,turnSalt)
    isPlayersVote = _(checksum == hash(vote,signature,playerSalt))
    if(!isLegitVote(vote,proposals) || !isValidSig(vote,voteSig,playerId))
      {
        return revert
      }
    GameStorage.updateScores(gameId,vote)
  }

    GameStorage.setNewProposals(newProposals)
    return receipt


  }
   }
    }

  return stopService
}